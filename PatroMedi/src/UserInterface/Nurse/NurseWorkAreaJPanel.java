/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Nurse;

import Buisness.EcoSystem;
import Buisness.Enterprise.BloodbankEnterprise;
import Buisness.Enterprise.Enterprise;
import Buisness.Network.Network;
import Buisness.UserAccount.UserAccount;
import Buisness.WorkQueue.DoctorNurseWorkQueue;
import Buisness.WorkQueue.NurseBloodInchargeWorkQueue;
import Buisness.WorkQueue.WorkRequest;
import Business.Hospital.Appointment.AppointmentDetails;
import Business.Hospital.Organisation.NurseOrganisation;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aviti
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NurseWorkAreaJPanel
     */
    private JPanel displayJPanel;
    private UserAccount userAccount;
    private NurseOrganisation organisation;
    private Enterprise enterprise;
    private EcoSystem system;
    private Network net;
    private UserAccount acc;
    private AppointmentDetails apd;
            
    public NurseWorkAreaJPanel(JPanel displayJPanel, UserAccount userAccount ,NurseOrganisation organisation, Enterprise enterprise,Network net,EcoSystem system) {
        initComponents();
        this.displayJPanel  = displayJPanel;
        this.organisation = organisation;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.system = system;
        this.net=net;
        this.acc=userAccount;
        populateTable();
    }
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) NurseTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request : organisation.getDoctorNurseWQ().getWorkRequestList()){
            DoctorNurseWorkQueue t = new DoctorNurseWorkQueue();
            t = (DoctorNurseWorkQueue)request;
            Object[] row = new Object[7];
            row[0] = t;
            row[1] = t.getAppointmentDetails().getIllness();
            row[2] = t.getAppointmentDetails().getDoctorName();
            row[3] = t.getAppointmentDetails().isIsBloodRequired();
            row[4] = t.getAppointmentDetails().isIsFinAHelpReqd();
            row[5]= t.getAppointmentDetails().getPatient().getBloodGroup();
            row[6] = t.getMessage();
            
            model.addRow(row);
        }
              
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BBButton = new javax.swing.JButton();
        quantityofBlood = new javax.swing.JLabel();
        bloodQuantityTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        NurseTable = new javax.swing.JTable();
        CheckStatusjButton = new javax.swing.JButton();

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("My Organization:");

        jLabel1.setText("value");

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nurse Work Area"));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("NURSE WORK AREA");

        enterpriseLabel1.setText("Welcome");

        jLabel3.setText("value");

        BBButton.setText("Forward to Blood Bank");
        BBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBButtonActionPerformed(evt);
            }
        });

        quantityofBlood.setText("Total Blood Required");

        NurseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Illness", "Doctor Name", "Bloodreq", "FinHelpReq", "Blood Group", "Message"
            }
        ));
        jScrollPane1.setViewportView(NurseTable);

        CheckStatusjButton.setText("Check Request Status");
        CheckStatusjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckStatusjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(enterpriseLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(quantityofBlood)
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BBButton)
                            .addComponent(bloodQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CheckStatusjButton))))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityofBlood)
                    .addComponent(bloodQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BBButton)
                .addGap(18, 18, 18)
                .addComponent(CheckStatusjButton)
                .addGap(97, 97, 97))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void BBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBButtonActionPerformed
        
        int selectedRow=NurseTable.getSelectedRow();
        if(selectedRow<0)
            {
                JOptionPane.showMessageDialog(null, "Please Select any Patient to proceed","Warning", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                try {
                DoctorNurseWorkQueue  tt = (DoctorNurseWorkQueue)NurseTable.getValueAt(selectedRow, 0);
                NurseBloodInchargeWorkQueue nbiWQ= new NurseBloodInchargeWorkQueue();
                             
                nbiWQ.setSender(acc);
                
                nbiWQ.setBloodQuantity(Integer.parseInt(bloodQuantityTextField.getText()));
                

                
                nbiWQ.setPatientName(tt.getAppointmentDetails().getPatient().getName());
                nbiWQ.setBloodType(tt.getAppointmentDetails().getPatient().getBloodGroup());
                nbiWQ.setMessage("InQueue");
                nbiWQ.setSender(acc);
                BloodbankEnterprise bb = null;
                for(Network network : system.getNetworkList()){
                    if(network.getName().equals(net.getName()))
                    {
      
                    tt.setMessage("Posted");
                    net.getBloodBankRequests().getWorkRequestList().add(nbiWQ);
                    userAccount.getWorkQueue().getWorkRequestList().add(nbiWQ);
                    bloodQuantityTextField.setText("");
                    populateTable();
                    JOptionPane.showMessageDialog(null, "Posted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                    
                }
                
                
            }                                                 
            
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"Enter a valid quantity");
            }
                
            }
        
    }//GEN-LAST:event_BBButtonActionPerformed

    private void CheckStatusjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckStatusjButtonActionPerformed
        // TODO add your handling code here:
        NurseBloodBankResponseJPanel nbb = new NurseBloodBankResponseJPanel(displayJPanel,userAccount,(NurseOrganisation)organisation,enterprise,net,system);
        displayJPanel.add("NurseBloodBankResponseJPanel", nbb);
        CardLayout layout = (CardLayout) displayJPanel.getLayout();
        layout.next(displayJPanel);
        
        
    }//GEN-LAST:event_CheckStatusjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBButton;
    private javax.swing.JButton CheckStatusjButton;
    private javax.swing.JTable NurseTable;
    private javax.swing.JTextField bloodQuantityTextField;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel quantityofBlood;
    // End of variables declaration//GEN-END:variables
}
