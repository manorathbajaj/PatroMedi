/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Receptionist;

import Buisness.EcoSystem;
import Buisness.Enterprise.CharityEnterprise;
import Buisness.Enterprise.Enterprise;
import Buisness.Network.Network;
import Buisness.UserAccount.UserAccount;
import Buisness.WorkQueue.DoctorReceptionistFinancialWorkQueue;
import Buisness.WorkQueue.HospitalCharityRequestWorkQueue;
import Buisness.WorkQueue.WorkRequest;
import Business.Hospital.Organisation.ReceptionistOrganisation;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manor
 */
public class CreateCharityFundingRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    private JPanel disp;
    private UserAccount acc;
    private ReceptionistOrganisation organisation;
    private Enterprise enterprise;
    private EcoSystem system;
    private Network net;
    
    public CreateCharityFundingRequestsJPanel(JPanel dispJPanel, UserAccount account, ReceptionistOrganisation organisation, Enterprise enterprise,Network net,EcoSystem system) {
        initComponents();
        this.disp = dispJPanel;
        this.acc = account;
        this.organisation = organisation;
        this.enterprise = enterprise;
        this.system = system;
        this.net = net;
        populateTable();
    }
        public void populateTable()
        {
            DefaultTableModel model = (DefaultTableModel) Jtable.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : organisation.getFundingQueue().getWorkRequestList())
            {
                DoctorReceptionistFinancialWorkQueue t = new DoctorReceptionistFinancialWorkQueue();
                t = (DoctorReceptionistFinancialWorkQueue)request;
                Object[] row = new Object[4];
                row[0] = t;
                row[1] = t.getPrescribed();
                row[2] = t.isFundingRequired();
                row[3] = t.isFundingApproved();
            
                model.addRow(row);
            }          
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtable = new javax.swing.JTable();
        txtFunding = new java.awt.TextField();
        label2 = new java.awt.Label();
        btnPost = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setText("Funding Required Work Area");
        add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 25, 391, 47));

        Jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Prescribed", "Funding Required", "FundingApproved"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Jtable);
        if (Jtable.getColumnModel().getColumnCount() > 0) {
            Jtable.getColumnModel().getColumn(0).setResizable(false);
            Jtable.getColumnModel().getColumn(2).setResizable(false);
            Jtable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 117, 485, 127));

        txtFunding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFundingActionPerformed(evt);
            }
        });
        add(txtFunding, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 270, 124, -1));

        label2.setText("Amount Required:");
        add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 270, 122, -1));

        btnPost.setText("Post to Charaties");
        btnPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostActionPerformed(evt);
            }
        });
        add(btnPost, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 455, 137, -1));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 455, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtFundingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFundingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFundingActionPerformed

    private void btnPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostActionPerformed
        try{
         int selectedRow = Jtable.getSelectedRow();
         
         if(selectedRow<0)
            {
                JOptionPane.showMessageDialog(null, "Please Select any Patient to proceed","Warning", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                DoctorReceptionistFinancialWorkQueue  tt = (DoctorReceptionistFinancialWorkQueue)Jtable.getValueAt(selectedRow, 0);
                HospitalCharityRequestWorkQueue hcrwq = new HospitalCharityRequestWorkQueue();
                
                hcrwq.setSender(acc);
                hcrwq.setAmount(Float.parseFloat(txtFunding.getText()));
                hcrwq.setHospitalName(enterprise.getName());
                hcrwq.setMessage("Sponsorship Required");
                hcrwq.setPatientName(tt.getApd().getPatient().getName());
                hcrwq.setCity(net.getName());
                hcrwq.setStatus("No");
                
                //CharityEnterprise e = null;
                
                for(Network n : system.getNetworkList())
                {
                    if(n.getName().equals(net.getName()))
                    {
                        /*for(Enterprise ent : n.getEnterpriseDirectory().getEnterpriseList())
                        {
                            if(ent.getEnterpriseType().equals(Enterprise.EnterpriseType.Charity))
                            {
                                e = (CharityEnterprise)ent;
                                break;
                            }
                        }*/
                        
                       // n.getCharityRequests().getWorkRequestList().add(hcrwq);
                        
                        
                                                        
                            
                            tt.setMessage("Sent");
                            n.getCharityRequests().getWorkRequestList().add(hcrwq);
                            acc.getWorkQueue().getWorkRequestList().add(hcrwq);
                            
                            
                
                        JOptionPane.showMessageDialog(null, "Posted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        break;
                }
                }
                txtFunding.setText("");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Insert proper values!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPostActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        disp.remove(this);
        CardLayout layout = (CardLayout) disp.getLayout();
        layout.previous(disp);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Jtable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPost;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.TextField txtFunding;
    // End of variables declaration//GEN-END:variables
}
