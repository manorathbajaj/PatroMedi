/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Receptionist;

import Buisness.EcoSystem;
import Buisness.Enterprise.Enterprise;
import Buisness.Network.Network;
import Buisness.UserAccount.UserAccount;
import Buisness.WorkQueue.CharityAcknowledgedWorkRequest;
import Buisness.WorkQueue.WorkRequest;
import Business.Hospital.Organisation.ReceptionistOrganisation;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sarthakgoel
 */
public class CharityAcknowledgementJPanel extends javax.swing.JPanel 
{
    private JPanel displayJPanel;
    private ReceptionistOrganisation organisation;
    private Enterprise enterprise;
    private EcoSystem system;
    private Network network;
    /**
     * Creates new form CharityAcknowledgementJPanel
     */
    public CharityAcknowledgementJPanel(JPanel dispJPanel, UserAccount account, ReceptionistOrganisation organisation, Enterprise enterprise,Network net,EcoSystem system) 
    {
        initComponents();
        
        this.displayJPanel = dispJPanel;
        this.enterprise = enterprise;
        this.organisation = organisation;
        
        populateJTable();
    }
    
    public void populateJTable()
    {
        DefaultTableModel model = (DefaultTableModel) charityAckJTable.getModel();
        
            model.setRowCount(0);
        
            for(WorkRequest request : organisation.getCharityAcknowledgment().getWorkRequestList())
            {
                CharityAcknowledgedWorkRequest t = new CharityAcknowledgedWorkRequest();
                t = (CharityAcknowledgedWorkRequest)request;
                
                if(enterprise.getName().equalsIgnoreCase(t.getHospitalName()))
                {
                    Object[] row = new Object[4];
                    row[0] = t;
                    row[1] = t.getDateAcknowledged();
                    row[2] = t.getCharityName();
                    row[3] = t.getCity();
            
                    model.addRow(row);
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        charityAckJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder("Charity Acknowledged Cases"));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("VIEW CHARITY ACKNOWLEDGEMENT");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 24, -1, -1));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 285, -1, -1));

        charityAckJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient", "Date Acknowledged", "Charity", "Charity Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(charityAckJTable);
        if (charityAckJTable.getColumnModel().getColumnCount() > 0) {
            charityAckJTable.getColumnModel().getColumn(0).setResizable(false);
            charityAckJTable.getColumnModel().getColumn(2).setResizable(false);
            charityAckJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 59, 610, 204));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        displayJPanel.remove(this);
        CardLayout layout = (CardLayout) displayJPanel.getLayout();
        layout.previous(displayJPanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTable charityAckJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
